plot <- plot + geom_label(
data = subset(toptable,
toptable[[y]] < pCutoff &
abs(toptable[[x]]) > FCcutoff),
aes(label = subset(toptable,
toptable[[y]] < pCutoff &
abs(toptable[[x]]) > FCcutoff)[['lab']]),
size = labSize,
colour = labCol,
fontface = labFace,
parse = parseLabels,
na.rm = TRUE)
}
}
# encircle
if (!is.null(encircle)) {
if (is(try(find.package("ggalt"), silent=TRUE), "try-error")) {
stop("Please install package \"ggalt\" to access the \"encircle\" features")
}
plot <- plot +
ggalt::geom_encircle(
data = subset(toptable,
rownames(toptable) %in% encircle),
colour = encircleCol,
fill = encircleFill,
alpha = encircleAlpha,
size = encircleSize,
show.legend = FALSE,
na.rm = TRUE)
}
# shade
if (!is.null(shade)) {
plot <- plot +
stat_density2d(
data = subset(toptable,
rownames(toptable) %in% shade),
fill = shadeFill,
alpha = shadeAlpha,
geom = 'polygon',
contour = TRUE,
size = shadeSize,
bins = shadeBins,
show.legend = FALSE,
na.rm = TRUE)
}
plot <- plot + coord_cartesian(clip = 'off')
return(plot)
}
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
my_df <- data.frame('airway')
print(my_df)
my_df <- data.frame(airway)
View(my_df)
View(airway)
airway@assays@data@listData[["counts"]]
rm(my_df)
View(EnhancedVolcano)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp('C:/Git/R/Week6/Day2/EnhancedVolcano_Demo')
# Label the top 10 most significant genes
top_genes <- data[order(data$pvalue)[1:10], ]
# Create a volcano plot
ggplot(data, aes(x = log2FoldChange, 7 = negLog10Pvalue)) +
# Create a volcano plot
ggplot(data, aes(x = log2FoldChange, y = negLog10Pvalue)) +
geom_point(aes(color = (abs(log2FoldChange) > log2FC_cutoff & pvalue < pvalue_cutoff))) +
scale_color_manual(values = c('black', 'red')) +
lab(title = 'Volcano Plot',
x = 'Log2 Fold Change',
y = '-Log10 P-value') +
theme_minimal()
rlang::last_trace()
View(airway)
View(airway)
# Define cutoffs for significance
log2FC_cutoff <- 1
shiny::runApp('C:/Git/network-explorer/network-explorer')
install.packages('cjyshiny')
library(cyjShiny)
install.packages("graph")
install.packages("cyjShiny")
runApp('C:/Git/network-explorer/network-explorer')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph", version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph", version = "3.18")
runApp('C:/Git/network-explorer/network-explorer')
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?toJSON
runApp()
runApp()
?require
runApp()
runApp()
runApp()
runApp()
create_volcano_plot(df(), event_column(), fold_change_column(), significance_column(), input, fold_change_threshold(), significance_threshold(), colors(), sizes())
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/R/Week6/Day4/EnhancedVolcano_simple')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/gsea-explorer/gsea-explorer')
runApp()
runApp('C:/Git/gsea-explorer/gsea-explorer')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tagList(
layout_sidebar(
sidebar= sidebar(
accordion(
accordion_panel("Significance Cutoffs", icon=icon('star'),
significanceUI(NS(id, 'significance_panel')),
),
accordion_panel("Plot Options", icon=icon('gear'),
plotUI(NS(id, 'plot_panel'))
)
)
),
layout_column_wrap(
width=1/2,
card(
card_header("Enhanced Volcano Plot"),
card_body(
plotOutput(NS(id, "volcano")) %>% withSpinner(image='spinner.gif'),
downloadButton('volcano_download', label='Download Graph')
)
),
card(
card_header("MA Plot"),
card_body(
plotOutput(NS(id,"ma")) %>% withSpinner(image='spinner.gif'),
downloadButton(ns('ma_download'), label='Download Graph')
)
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
print(plots$volcano())  # Ensuring the plot is printed correctly
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tagList(
layout_sidebar(
sidebar= sidebar(
accordion(
accordion_panel("Significance Cutoffs", icon=icon('star'),
significanceUI(NS(id, 'significance_panel'))
),
accordion_panel("Plot Options", icon=icon('gear'),
plotUI(NS(id, 'plot_panel'))
)
)
),
layout_column_wrap(
width=1/2,
card(
card_header("Enhanced Volcano Plot"),
card_body(
plotOutput(NS(id, "volcano")) %>% withSpinner(image='spinner.gif')
),
card(
card_header("MA Plot"),
card_body(
plotOutput(NS(id,"ma")) %>% withSpinner(image='spinner.gif')
)
)
)
)
)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?EnhancedVolcano
??EnhancedVolcano
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp()
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp()
runApp()
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp()
runApp()
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
shiny::runApp()
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
runApp('C:/Git/R/Week7/Day1/EnhancedVolcano_simple')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp('C:/Git/fold-change-explorer/fold-change-explorer')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Git/R/Week7/Day2/EnhancedVolcano_simple')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
